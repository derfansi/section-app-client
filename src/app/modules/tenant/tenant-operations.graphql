mutation createOrganizer($input: NewOrganizerInput!) {
  createEventOrganizer(newOrganizerInput: $input) {
    id
  }
}

query loadEventsWithBooking($after: DateTime) {
  events(after: $after) {
    id
    title
    start
    icon
    registrationMode
    registrationStart
    participantLimit
    participantRegistrationCount
    countedParticipantRegistrations
    organizer {
      id
      name
    }
  }
}

query loadEventsWithRating($after: DateTime) {
  events(after: $after, reverseOrder: true) {
    id
    title
    start
    icon
    participantRating
    participantRatingCount
    organizerRating
    organizerRatingCount
    ratings {
      userComment
      rating
      type
      anonymousRating
      user {
        id
        fullName
        picture
        currentTenant {
          userId
          tenantId
          status
        }
      }
    }
    organizer {
      id
      name
    }
  }
}

query loadAllPhotos {
  photos {
    id
    cols
    rows
    src
    original
    originalBlob
    type
    event {
      id
      title
    }
    creator {
      id
      fullName
    }
  }
}

query loadUser($id: ID!) {
  user(id: $id) {
    id
    authId
    firstName
    lastName
    fullName
    email
    birthdate
    esnCardValidUntil
    esnCardNumber
    position
    picture
    currentTenant(userId: $id) {
      userId
      tenantId
      role
      status
    }
    eventRegistrations {
      id
      createdAt
      checkInTime
      type
      status
      deletingCode {
        id
        createdAt
      }
      creatingCode {
        id
        createdAt
      }
      transactions {
        id
        status
        direction
        amount
        type
        subject
        stripePayment {
          id
          status
          events
        }
      }
      event {
        id
        title
        start
        end
        icon
      }
    }
  }
}

query getTenantForEdit {
  currentTenant {
    id
    name
    imprintPage
    aboutPage
    privacyPolicyPage
    faqPage
    tacPage
    homePageLink
    homePageStrategy
    currency
    communicationEmail
    settings {
      socialLinks {
        label
        icon
        url
      }
      sectionHubLinks {
        label
        icon
        url
      }
      banners {
        title
        body
        color
        link
        displayToMembershipStatus
      }
      deRegistrationOptions {
        free {
          organizers {
            deRegistrationPossible
            minimumDaysForDeRegistration
            refundFeesOnDeRegistration
          }
          participants {
            deRegistrationPossible
            minimumDaysForDeRegistration
            refundFeesOnDeRegistration
            movePossible
            minimumDaysForMove
            refundFeesOnMove
          }
        }
        paid {
          organizers {
            deRegistrationPossible
            minimumDaysForDeRegistration
            refundFeesOnDeRegistration
          }
          participants {
            deRegistrationPossible
            minimumDaysForDeRegistration
            refundFeesOnDeRegistration
            movePossible
            minimumDaysForMove
            refundFeesOnMove
          }
        }
      }
      showPWAInstall
      brandIconUrl
      esnCardLink
    }
  }
}

query getOrganizers {
  eventOrganizers {
    id
    name
    text
  }
}

mutation updateTenant($id: ID!, $update: UpdateTenantInput!) {
  updateTenant(id: $id, updateTenantInput: $update) {
    id
    faqPage
    imprintPage
    privacyPolicyPage
    aboutPage
    tacPage
    homePageLink
    homePageStrategy
    currency
    communicationEmail
    settings {
      socialLinks {
        label
        icon
        url
      }
      banners {
        title
        body
        color
        link
        displayToMembershipStatus
      }
      sectionHubLinks {
        label
        icon
        url
      }
      brandIconUrl
      showPWAInstall
      esnCardLink
    }
  }
}

mutation updateUser(
  $id: ID!
  $position: String
  $role: Role!
  $status: MembershipStatus!
) {
  updateUserPosition(userId: $id, position: $position) {
    position
  }
  updateUserRole(userId: $id, role: $role) {
    userId
    tenantId
    role
  }
  updateUserStatus(userId: $id, status: $status) {
    userId
    tenantId
    status
  }
}
